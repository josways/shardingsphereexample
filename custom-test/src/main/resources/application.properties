# 数据源配置
spring.shardingsphere.datasource.names=ds0,ds1
# 数据源配置详情
# hikari
#spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mysql://192.168.102.110:3306/josway_test?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
# druid
spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://192.168.102.110:3306/josway_test?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=root
spring.shardingsphere.datasource.ds0.initial-size=5
spring.shardingsphere.datasource.ds0.max-active=20
spring.shardingsphere.datasource.ds0.min-idle=5
spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://192.168.102.105:3306/josway_test?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=123456
spring.shardingsphere.datasource.ds1.initial-size=5
spring.shardingsphere.datasource.ds1.max-active=20
spring.shardingsphere.datasource.ds1.min-idle=5
# 由数据源名 + 表名组成，以小数点分隔。多个表以逗号分隔，支持inline表达式。缺省表示使用已知数据源与逻辑表名称生成数据节点，用于广播表（即每个库中都需要一个同样的表用于关联查询，多为字典表）或只分库不分表且所有库的表结构完全一致的情况
#spring.shardingsphere.sharding.tables.t_test.actual-data-nodes=ds0.t_test
#spring.shardingsphere.sharding.tables.t_test.actual-data-nodes=ds1.t_test
spring.shardingsphere.sharding.tables.t_test.actual-data-nodes=ds$->{0..1}.t_test
# 配置 test_id 被拆分到多个子库的策略,# 配置 test_id 被拆分到多个子库的算法
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=test_id
#spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds0
#spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds1
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{test_id % 2}
# 配置 t_order 的主键 order_id ,及其生成策略
spring.shardingsphere.sharding.tables.t_test.key-generator.column=test_id
spring.shardingsphere.sharding.tables.t_test.key-generator.type=SNOWFLAKE
# 开启sql显示
spring.shardingsphere.props.sql.show=false

#spring.shardingsphere.props.max.connections.size.per.query=10

# MyBatis配置
# 开启sql显示
#mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
mybatis-plus.typeAliasesPackage=com.example.customtest.domain
mybatis-plus.mapperLocations=classpath*:mapperxml/*Mapper.xml

spring.main.allow-bean-definition-overriding=true